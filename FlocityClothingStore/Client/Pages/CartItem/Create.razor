@page "/cartItem/create"
@using FlocityClothingStore.Shared.Models.CartItem
@inject HttpClient http
@using FlocityClothingStore.Shared.Models.Product
@using FlocityClothingStore.Shared.Models.Cart
@inject NavigationManager navigation

<h3>Create CartItem</h3>
@if(errorMessage !=null)
{
    <h5 class="text-danger">@errorMessage</h5>
}
@if(products == null)
{
    <p><em>Loading...</em></p>

}
else
{
    <div class="container">
        <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Quantity</label>
                <div class="col-sm-10">
                    <InputNumber class="form-control" @bind-Value="model.Quantity" />
                </div>
            </div>
            <div class="form-group">
                <label>Cart ID</label>
                <div class="col-sm-10">
                    <InputSelect class="form-control" @bind-Value="model.CartId">
                        @foreach(var cart in carts)
                        {
                            <option value="@cart.Id">@cart.Id</option>
                        }
                    </InputSelect>
                </div>
            </div>
                <div class="form-group">
                 <label>Product ID</label>
                <div class="col-sm-10">
                    <InputSelect class="form-control" @bind-Value="model.ProductId">
                        @foreach(var product in products)
                        {
                            <option value="@product.Id">@product.Name</option>
                        }
                        </InputSelect>
                </div>
            </div>
            <div class="form-group">
                <label>Size</label>
                <div class="col-sm-10">
                    <InputSelect class="form-control" @bind-Value="model.Size">
                        <option value="">Pick a size</option>
                        <option value="S">S</option>
                        <option value="M">M</option>
                        <option value="L">L</option>
                    </InputSelect>
                </div>
             </div>
 
            <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
        </EditForm>
    </div>
}

@code {
    private CartItemCreate model = new();
    private IEnumerable<CartListItem> carts;
    private IEnumerable<ProductListItem> products;
    private string errorMessage;
    protected override async Task OnInitializedAsync()
    {
        products = await http.GetFromJsonAsync<IEnumerable<ProductListItem>>("/api/product/");
        carts = await http.GetFromJsonAsync<IEnumerable<CartListItem>>("/api/cart/");
    }
   
    private async void HandleSubmit()
    {
        var createRes = await http.PostAsJsonAsync<CartItemCreate>("/api/cartItem", model);
        if (createRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/cartItem");
        }
        else
        {
            errorMessage = "Your cartItem could not be created at this moment, please try again later.";
        }

    }

}
