@page "/cartItem/delete/{CartItemId:int}"
@using FlocityClothingStore.Shared.Models.CartItem
@inject HttpClient http
@inject NavigationManager navigation


<h3>Delete CartItem #@CartItemId?</h3>
@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}
@if (CartItem != null)
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>CartItem #@CartItem.Id</span>
                <span class="text-muted"><strong>@CartItem.Quantity</strong></span>
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-muted"><strong>@CartItem.Size</strong></span>
                <span class="text-muted"><strong>@CartItem.ProductId</strong></span>
                <span class="text-muted"><strong>@CartItem.CartId</strong></span>
            </div>
        </div>
        <div class="d-flex justify-content mt-3">
            <div class="text-center justify-content-between w-25">
                <a href="/product" class="btn btn-outline-primary">Back to CartItems</a>
                <a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Delete Product!</a>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    [Parameter]
    public int CartItemId { get; set; }
    public CartItemDetail CartItem { get; set; }
    public string Message { get; set; }
    protected override async Task OnInitializedAsync()
    {
        CartItem = await http.GetFromJsonAsync<CartItemDetail>($"/api/cartItem/{CartItemId}");
    }
    private async void HandleClick()
    {
        //call a Delete request on our API
        var deleteRes = await http.DeleteAsync($"/api/cartItem/{CartItemId}");

        //check to make sure the call was successul
        //if successful, naviage back to the Index.razor component
        if (deleteRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/cartItem");
        }
        //if it was not successful, give the user an error message
        else
        {
            Message = "Failed to delete your information.";
        }
    }
}
