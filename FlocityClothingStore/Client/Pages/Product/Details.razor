@page "/product/{ProductId:int}"
@using FlocityClothingStore.Shared.Models.Product
@inject HttpClient http

<h3>Product #@ProductId</h3>
@if (Product != null)
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Product #@ProductId</span>
                <span>Product #@Product.CategoryId</span>
                <span class="text-muted">Category: <strong>@Product.CategoryName</strong></span>
            </div>
            <div class="card-body">
                <h5 class="card-title">Product Size: @Product.Size</h5>
                <h5 class="card-title">Product Name: @Product.Name</h5>
                <p class="card-text">Product Description: @Product.Description</p>
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left">ProductPrice: @Product.Price</span>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"/product/edit/{ProductId}") class="btn btn-outline-danger">Edit</a>
                <a href=@($"/product/delete/{ProductId}") class="btn btn-outline-danger">Delete</a>
                    <hr />
                    <a href="/product">Back to Product Index</a>
            </div>
        </div>
    </div>

    }
else
{
    <p><em>Loading...</em></p>
}


@code {
    [Parameter]
    public int ProductId { get; set; }
    public ProductDetail Product { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        Product = await http.GetFromJsonAsync<ProductDetail>($"/api/product/{ProductId}");
    }

}

