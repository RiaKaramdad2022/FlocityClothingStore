@page "/transaction/{TransactionId:int}"
@using FlocityClothingStore.Shared.Models.Transaction
@using FlocityClothingStore.Shared.Models.Customer
@using FlocityClothingStore.Shared.Models.Product
@inject HttpClient http

<h3>Transaction #@TransactionId</h3>
@if (Transaction != null)
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Transaction #@Transaction.Id</span>
                <span class="text-muted">Customer: <strong>@Transaction.CustomerName</strong></span>
            </div>
            <div class="card-body">
                <h4 class="card-title">Customer ID: @Transaction.CustomerId</h4>
                <p class="card-text">Product Description: @Transaction.ProductDescription</p>
                <p class="card-text">Product Price: @Transaction.ProductPrice</p>
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left">TransactionDate: @Transaction.DateOfTransaction</span>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"/transaction/edit/{TransactionId}") class="btn btn-outline-primary">Edit</a>
                <a href=@($"/transaction/delete/{TransactionId}") class="btn btn-outline-danger">Delete</a>
                <hr />
                <a href="/note">Back to Transaction Index</a>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}


@code {
    [Parameter]
    public int TransactionId { get; set; }
    public TransactionDetail Transaction { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        Transaction = await http.GetFromJsonAsync<TransactionDetail>($"/api/transaction/{TransactionId}");
    }

}


