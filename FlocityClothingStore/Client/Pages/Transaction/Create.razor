@page "/transaction/create"
@using FlocityClothingStore.Shared.Models.Transaction
@using FlocityClothingStore.Shared.Models.Product
@using FlocityClothingStore.Shared.Models.Customer
@inject HttpClient http
@inject NavigationManager navigation

<h3>Create Transaction</h3>
@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}
@if(products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Quantity</label>
                <div class="col-sm-5">
                    <InputNumber class="form-control" @bind-Value="model.Quantity" />
                </div>
            </div>
            <div class="form-group">
                <label>Product ID</label>
                <div class="col-sm-5">
                    <InputSelect class="form-control" @bind-Value="model.ProductId">
                        @foreach(var product in products)
                        {
                            <option value="@product.Id">@product.Id</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="form-group">
                <label>Customer ID</label>
                <div class="col-sm-5">
                    <InputSelect class="form-control" @bind-Value="model.CustomerId">
                        @foreach(var customer in customers)
                        {
                            <option value="@customer.Id">@customer.Id</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="form-group">
                <label>Transaction Date</label>
                <div class="col-sm-5">
                    <InputDate class="form-control" @bind-Value="model.DateOfTransaction" />
                </div>
            </div>

            <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
        </EditForm>
    </div>
}
@code {
    private TransactionCreate model = new();
    private IEnumerable<ProductListItem> products;
    private IEnumerable<CustomerListItem> customers;
    private string errorMessage;
    protected override async Task OnInitializedAsync()
    {
        products = await http.GetFromJsonAsync<IEnumerable<ProductListItem>>("/api/product/");
        customers = await http.GetFromJsonAsync<IEnumerable<CustomerListItem>>("/api/customer/");
    }
    private async void HandleSubmit()
    {
        var createRes = await http.PostAsJsonAsync<TransactionCreate>("/api/transaction", model);
        if (createRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/transaction");
        }
        else
        {
            errorMessage = "Transaction could not be created. Please try again later.";
        }
    }
}
